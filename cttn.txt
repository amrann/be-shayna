Project laravel ini saya install dengan Sail dimana terlebih dahulu perlu menjalankan docker
.
Laravel Sail merupakan antar muka berbasis command line yang dapat kita gunakan untuk kebutuhan development environtement di lokal laravel, laravel sail ini cocok untuk kita yang tidak memiliki lokal development seperti laradock,laragon,xampp,valet dan lain-lain.
.
Sebelum menjalankan project ini pastikan php dimatikan terlebih dahulu
brew services stop httpd
.
Cara menjalankan project ini:
- running docker sail-8.1/app
- ketik ./vendor/bin/sail up
.
Jika membuat controller pada laravel biasa dapat dilakukan dengan => php artisan make:controller NameController
maka, dengan menggunakan laravel sail kita melakukannya dengan
=> ./vendor/bin/sail artisan make:controller NameController
tapi,
jalanin dulu ya sailnya dengan ./vendor/bin/sail up
.
Database migrations itu sebuah fitur pada laravel yang memudahkan developer utk membuat table tanpa lewat phpmyadmin. Dengan fitur ini, developer dapat melacak aksi yang dilakukan pada db
.
sebenarnya gk wajib make laravel migrations
.
Eloquent itu bisa dikatakan tools yang memudahkan programmer membuat query.
.
Laravel memiliki 2 cara dalam berinteraksi dengan db, yaitu dengan menggunakan Eloquent ORM (Object Relation Mapping) dan Query Builder. Kedua cara ini memiliki kelebihan masing-masing dimana Query Builder memiliki kecepatan execution lebih dibanding Eloquent, sedangkan dari segi syntax Eloquent lebih sederhana
.
Project ini, menggunakan laravel/ui untuk bagian authnya. Konfigurasinya seperti ini
 - ./vendor/bin/sail composer require laravel/ui:^3.0 (menggunakan versi ^3.0 karena menggunakan php 8.1.7)
 - ./vendor/bin/sail artisan ui vue --auth
 - npm install && npm run dev
.
Project ini juga menggunakan form request sebagai validasi formnya
 - ./vendor/bin/sail artisan make:request ProductGalleryRequest
.
Project ini menggunakan file storage bawaan laravel ya
 - ./vendor/bin/sail artisan storage:link (ini bertujuan storage yang ada dalam laravel kemudian akan dipublic sehingga bisa diakses umum)
.
Auth this project:
email : coba@gmail.com
pass : 123456789
.
Project ini menggunakan fitur SoftDelete bawaan laravel. Jadi ketika salah satu item terhapus, maka sebenarnya item tersebut hanya dihilangkan dari tampilan saja, datanya tetap berada dalam db. Nah yang membedakan data yang terhapus/tidak dalam db adalah data yang terhapus akan memiliki value pada kolom deleted_at
 

coba ini na

coba lagiii

==================================================
1.Source Code Admin HTML Template
https://github.com/galpratama/shayna-admin-html
2.Source Code CMS & API Laravel
https://github.com/galpratama/shayna-backend-laravue
3.API Response Formatter
https://gist.github.com/galpratama/36ca7e903a73bc46acaa6fb810b7cd13